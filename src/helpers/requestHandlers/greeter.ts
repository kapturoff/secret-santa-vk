import { ClientInfo, MessageResponse, Room } from 'interfaces'
import Markup from 'node-vk-bot-api/lib/markup'

export default function greeterHandler(joinedRooms: Room[]): MessageResponse {
	return {
		text: `–û-—Ö–æ-—Ö–æ, –ø—Ä–∏–≤–µ—Ç! üéÖ
–Ø ‚Äî –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–≥—Ä—É "–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞" –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –í–ö.

${
	joinedRooms.length
		? '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ:\n' +
		  joinedRooms.map((room: Room) => `- ${room.name} (${room.code})`).join('\n')
		: '–í—ã –µ—â—ë –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –Ω–∏ –∫ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ –∏ —ç—Ç–æ –ø–æ—Ä–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å!'
}

–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å, –ø–æ–∫–∏–Ω—É—Ç—å –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ –¥–ª—è –∏–≥—Ä—ã, –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.`,
		buttons: Markup.keyboard([
			Markup.button({
				color: 'positive',
				action: {
					type: 'text',
					label: '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É',
					payload: JSON.stringify({ command: 'createRoom' },)
				},
			}),
			Markup.button({
				color: 'secondary',
				action: {
					type: 'text',
					label: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ',
					payload: JSON.stringify({ command: 'joinRoom' },)
				},
			}),
			Markup.button({
				color: 'secondary',
				action: {
					type: 'text',
					label: '–í—ã–π—Ç–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã',
					payload: JSON.stringify({ command: 'leaveRoom' },)
				},
			}),
			Markup.button({
				color: 'negative',
				action: {
					type: 'text',
					label: '–ß—Ç–æ —Ç–∞–∫–æ–µ "–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞"?',
					payload: JSON.stringify({ command: 'help' },)
				},
			}),
		]),
	} as MessageResponse
}
