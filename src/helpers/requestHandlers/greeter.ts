import { ClientInfo, MessageResponse, Room } from 'interfaces'
import Markup from 'vk-markup'

export default function greeterHandler(joinedRooms?: Room[]): MessageResponse {
	return {
		text: `–û-—Ö–æ-—Ö–æ, –ø—Ä–∏–≤–µ—Ç! üéÖ
–Ø ‚Äî –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–≥—Ä—É "–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞" –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –í–ö.
${
	joinedRooms
		? '\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ:\n' +
		  joinedRooms
				.map((room: Room) => `- ${room.name} (${room.code})`)
				.join('\n') +
		  '\n'
		: ''
}
–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–µ–π, –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.`,
		buttons: Markup.keyboard([
			Markup.button({
				color: 'positive',
				action: {
					label: '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É',
					payload: { action: 'createRoom' },
				},
			}),
			Markup.button({
				color: 'secondary',
				action: {
					label: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ',
					payload: { action: 'joinRoom' },
				},
			}),
			Markup.button({
				color: 'negative',
				action: {
					label: '–ß—Ç–æ —Ç–∞–∫–æ–µ "–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞"?',
					payload: { action: 'help' },
				},
			}),
		]),
	} as MessageResponse
}
